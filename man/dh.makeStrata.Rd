% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make-strata.R
\name{dh.makeStrata}
\alias{dh.makeStrata}
\title{Creates strata of a repeated measures variable within specified age or time bands}
\usage{
dh.makeStrata(
  df = NULL,
  id_var = NULL,
  age_var = NULL,
  var_to_subset = NULL,
  bands = NULL,
  mult_action = NULL,
  mult_vals = NULL,
  new_obj = NULL,
  conns = NULL,
  band_action = NULL,
  checks = TRUE,
  df_name = NULL
)
}
\arguments{
\item{df}{String providing name of opal/armadillo dataframe in long format.}

\item{id_var}{String providing name of subject id variable in df.}

\item{age_var}{String providing name of age or time variable in df.}

\item{var_to_subset}{String providing name of the variable in df
to stratify according to bands.}

\item{bands}{A numeric vector of alternating lower and upper values to specify
the bands in which to derive strata of var_to_subset. This vector should
be an even number and twice the length of the number of bands required.}

\item{mult_action}{String specifying how to handle cases where a subject has more
than one measurement within a specified band. Use 'earliest' to
take the earliest measurement, 'latest' to take the
latest measurement and 'nearest' to take the measurement nearest to
the value(s) specified in mult_vals.}

\item{mult_vals}{Numeric vector specifying the value in each age band to chose values
closest to. Required only if mult_action = "nearest". The order and length of the vector
should correspond to the order and number of the bands.}

\item{new_obj}{String providing name of data frame to be created on the DataSHIELD backend}

\item{conns}{Connections object for DataSHIELD backends.}

\item{band_action}{String specifying how the values provided in 'bands' arguments are
                   evaluated in creating the strata:
"g_l" = greater than the lowest band and less than the highest band;
"ge_le" = greater or equal to the lowest band and less than or equal to the highest band;
"g_le" = greater than the lowest band and less than or equal to the highest band;
"ge_l" = greater than or equal to the lowest band and less than the highest band;}

\item{checks}{Boolean. Whether or not to perform checks prior to running function. Default is TRUE.}

\item{df_name}{Retired argument name. Please use `new_obj' instead.}
}
\value{
A serverside dataframe in wide format containing the newly derived variables. For each band specified two
        variables will be returned: (i) var_to_subset and (ii) age_var. The suffix
         .[lower_band] identifies the band for that variable.
}
\description{
For many analyses you will want to use values from repeated measures data within
specified bands. For example, you may have BMI measures between ages 0-18, but want
to create a variable for each subject which is their BMI between ages 9-11.
This is quite complicated to do in DataSHIELD so this function automates the process.
}
\details{
The steps here are equivalent to the following dplyr chain:

df %>%
group_by(band, id) %>%
arrange() %<%
slice(1)


One of the complexities of this operation is how to deal with cases where
subjects have multiple observations within a specified band. This is handled
by first sorting the group so that the required value is first. When we reshape
the data all but the first value for subjects with multiple observations within a band
are dropped.

Note that for big datasets this will take a long time to run.
}
