% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-stats.R
\name{dh.getStats}
\alias{dh.getStats}
\title{Produces a rance of descriptive statistics in a useful format}
\usage{
dh.getStats(df = NULL, vars = NULL, conns = NULL, digits = 2, checks = TRUE)
}
\arguments{
\item{df}{Character specifying a server-side data frame.}

\item{vars}{A character vector of columns within `df` to describe.}

\item{conns}{DataSHIELD connections object.}

\item{digits}{number of decimal places to round continuous stats to. Default
is 2.}

\item{checks}{Logical; if TRUE checks are performed prior to running the 
function. Default is TRUE.}
}
\value{
The function returns a list with two elements containing dataframes
with summary statistics for (i) categorical and (ii) continuous variables.
These data frames are in longform and contain the following variables.

Categorical:
variable = variable
 category = level of variable, including missing as a category
 value = number of observations
 cohort = name of cohort, including combined values for all cohorts
 cohort_n = total number of observations for cohort in dataset
 valid_n = number of valid observations for variable (sum of ns for each
           categories)
 valid_perc = observations within a category as percentage of valid_n

Continuous:

 cohort = cohort, including combined values for all cohorts
 variable = variable
 mean = mean (for combined value for all cohorts this is calculated by meta-
       analysis using fixed-effects)
 std.dev = standard deviation (again calculated by MA for cohorts combined)
 valid_n = as above
 cohort_n = as above
 missing_n = as above
 missing_perc = as above
}
\description{
Whilst dsBaseClient provides the functions 'ds.table' and 'ds.summary' to
extract descriptive statistics, their output is not in a very useable format.
This function extracts key descriptive statistics and returns them in a 
tibble. It also overcomes an issue with ds.summary, where it throws an error
if the variable is missing in one or more study. By contrast, getStats will
return the variable for that cohort with all NAs.
}
